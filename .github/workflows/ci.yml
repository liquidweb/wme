# Workflow name
name: "CI/CD: Install, Build, and Lint"

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    name: Build and Install Dependencies
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      pnpm-cache-dir: ${{ steps.pnpm-cache.outputs.PNPM_CACHE_DIR }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
          run_install: false

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "PNPM_CACHE_DIR=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.PNPM_CACHE_DIR }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

  lint:
    name: Lint JS and PHP
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
          run_install: false

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{needs.build.outputs.pnpm-cache-dir}}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Lint
        run: pnpm lint
    
  e2e-tests:
    name: End to End Testing
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs: build
    env:
      ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/wme-sitebuilder/tests/results/allure-report
      ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/wme-sitebuilder/tests/results/allure-results
      DEFAULT_TIMEOUT_OVERRIDE: 30000
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
          run_install: false

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{needs.build.outputs.pnpm-cache-dir}}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Install Playwright dependencies
        run: |
          npx playwright install chromium firefox webkit --with-deps

      - name: Launch wp-env e2e environment
        working-directory: plugins/wme-sitebuilder
        run: pnpm env:dev

      - name: Run Sitebuilder End to End tests.
        timeout-minutes: 15
        working-directory: plugins/wme-sitebuilder
        run: pnpm test

      - name: Generate Playwright E2E Test report.
        if: success() || failure()
        working-directory: plugins/wme-sitebuilder
        run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

      - name: Archive E2E test report
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.E2E_ARTIFACT }}
          path: |
            ${{ env.ALLURE_RESULTS_DIR }}
            ${{ env.ALLURE_REPORT_DIR }}
          if-no-files-found: ignore
          retention-days: 5
